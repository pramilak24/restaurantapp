{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\restaurant-app\\\\front\\\\src\\\\components\\\\Billing.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Billing() {\n  _s();\n  const {\n    orderId\n  } = useParams(); // Get the orderId from the URL\n  const [order, setOrder] = useState(null); // Store the order details\n  const [isProcessing, setIsProcessing] = useState(true); // Show processing state\n\n  useEffect(() => {\n    const fetchOrderDetails = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/billing', {\n          orderId\n        });\n        setOrder(response.data); // Store the fetched order details\n      } catch (error) {\n        console.error('Error fetching order details:', error);\n        alert('Failed to process bill.');\n      } finally {\n        setIsProcessing(false); // Stop the processing state\n      }\n    };\n    fetchOrderDetails();\n  }, [orderId]);\n  const handlePrint = () => {\n    window.print(); // Trigger the browser's print dialog\n  };\n  if (isProcessing) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing the bill...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  if (!order) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to load bill details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"billing-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Bill for Table \", order.table_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bill-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" - Quantity: \", item.quantity, \" - Price: $\", item.price]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", order.totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrint,\n      children: \"Print Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Billing, \"+VvAL3LXUpr+P2BFkfTOAO2mvPo=\", false, function () {\n  return [useParams];\n});\n_c = Billing;\nexport default Billing;\nvar _c;\n$RefreshReg$(_c, \"Billing\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Billing","_s","orderId","order","setOrder","isProcessing","setIsProcessing","fetchOrderDetails","response","post","data","error","console","alert","handlePrint","window","print","children","fileName","_jsxFileName","lineNumber","columnNumber","className","table_id","items","map","item","index","name","quantity","price","totalAmount","onClick","_c","$RefreshReg$"],"sources":["C:/ReactJS/restaurant-app/front/src/components/Billing.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Billing() {\r\n  const { orderId } = useParams(); // Get the orderId from the URL\r\n  const [order, setOrder] = useState(null); // Store the order details\r\n  const [isProcessing, setIsProcessing] = useState(true); // Show processing state\r\n\r\n  useEffect(() => {\r\n    const fetchOrderDetails = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/billing', { orderId });\r\n        setOrder(response.data); // Store the fetched order details\r\n      } catch (error) {\r\n        console.error('Error fetching order details:', error);\r\n        alert('Failed to process bill.');\r\n      } finally {\r\n        setIsProcessing(false); // Stop the processing state\r\n      }\r\n    };\r\n\r\n    fetchOrderDetails();\r\n  }, [orderId]);\r\n\r\n  const handlePrint = () => {\r\n    window.print(); // Trigger the browser's print dialog\r\n  };\r\n\r\n  if (isProcessing) {\r\n    return <p>Processing the bill...</p>;\r\n  }\r\n\r\n  if (!order) {\r\n    return <p>Failed to load bill details.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"billing-page\">\r\n      <h1>Bill for Table {order.table_id}</h1>\r\n      <div className=\"bill-details\">\r\n        <ul>\r\n          {order.items.map((item, index) => (\r\n            <li key={index}>\r\n              {item.name} - Quantity: {item.quantity} - Price: ${item.price}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p>Total: ${order.totalAmount}</p>\r\n      </div>\r\n      <button onClick={handlePrint}>Print Bill</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Billing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}