{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\restaurant-app\\\\front\\\\src\\\\components\\\\OrderList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderList = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/orders').then(response => {\n      setOrders(response.data);\n    }).catch(error => {\n      console.error('Error fetching orders:', error);\n      setError('There was an error fetching the orders. Please try again.');\n    });\n  }, []);\n  const handleOrderCompletion = id => {\n    axios.put(`http://localhost:5000/api/orders/${id}`).then(response => {\n      console.log('Order status updated:', response.data);\n      setOrders(orders.map(order => order.id === id ? {\n        ...order,\n        status: 'Delivered'\n      } : order));\n    }).catch(error => {\n      console.error('Error updating order status:', error);\n      setError('There was an error updating the order status. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Table ID: \", order.table_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Items: \", Array.isArray(order.items) ? order.items.join(', ') : 'Invalid items format']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", order.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), order.status === 'Pending' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOrderCompletion(order.id),\n          children: \"Mark as Delivered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 56\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderList, \"pROa0+jdBu6HOhGUM79IhVOj5Qo=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","error","setError","get","then","response","data","catch","console","handleOrderCompletion","id","put","log","map","order","status","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","table_id","Array","isArray","items","join","onClick","_c","$RefreshReg$"],"sources":["C:/ReactJS/restaurant-app/front/src/components/OrderList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OrderList = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/orders')\r\n            .then(response => {\r\n                setOrders(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching orders:', error);\r\n                setError('There was an error fetching the orders. Please try again.');\r\n            });\r\n    }, []);\r\n\r\n    const handleOrderCompletion = (id) => {\r\n        axios.put(`http://localhost:5000/api/orders/${id}`)\r\n            .then(response => {\r\n                console.log('Order status updated:', response.data);\r\n                setOrders(orders.map(order => order.id === id ? { ...order, status: 'Delivered' } : order));\r\n            })\r\n            .catch(error => {\r\n                console.error('Error updating order status:', error);\r\n                setError('There was an error updating the order status. Please try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Order List</h1>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {orders.map(order => (\r\n                    <li key={order.id}>\r\n                        <p>Table ID: {order.table_id}</p>\r\n                        <p>Items: {Array.isArray(order.items) ? order.items.join(', ') : 'Invalid items format'}</p>\r\n                        <p>Status: {order.status}</p>\r\n                        {order.status === 'Pending' && <button onClick={() => handleOrderCompletion(order.id)}>Mark as Delivered</button>}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}